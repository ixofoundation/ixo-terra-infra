#file: noinspection YAMLSchemaValidation
prometheus:
  prometheusSpec:
    #https://github.com/CrunchyData/postgres-operator-examples/blob/main/kustomize/monitoring/prometheus/config/prometheus.yml
    additionalScrapeConfigs:
      - job_name: blackbox
        metrics_path: /probe
        params:
          module: [ http_2xx ]
        static_configs:
          - targets:
              ${indent(14, blackbox_targets)}
        relabel_configs:
          - source_labels: [ __address__ ]
            target_label: __param_target
          - source_labels: [ __param_target ]
            target_label: target
          - target_label: __address__
            replacement: prometheus-blackbox-exporter.prometheus-blackbox-exporter:9115
      - job_name: 'crunchy-postgres-exporter'
        kubernetes_sd_configs:
          - role: pod
            selectors:
              - role: pod
                label: postgres-operator.crunchydata.com/crunchy-postgres-exporter=true
        relabel_configs:
          # Keep exporter port and drop all others
          - source_labels: [ __meta_kubernetes_pod_container_port_number ]
            action: keep
            regex: 9187
          # Set label for namespace
          - source_labels: [ __meta_kubernetes_namespace ]
            target_label: kubernetes_namespace
          # Set label for pod name
          - source_labels: [ __meta_kubernetes_pod_name ]
            target_label: pod
          # Convert namespace and cluster name to pg_cluster=namespace:cluster
          - source_labels: [ __meta_kubernetes_namespace,__meta_kubernetes_pod_label_postgres_operator_crunchydata_com_cluster ]
            target_label: pg_cluster
            separator: ":"
            replacement: '$1$2'
          # Convert kubernetes pod ip to ip
          - source_labels: [ __meta_kubernetes_pod_ip ]
            target_label: ip
          # Convert postgres-operator.crunchydata.com/instance to deployment
          - source_labels: [ __meta_kubernetes_pod_label_postgres_operator_crunchydata_com_instance ]
            target_label: deployment
          # Convert postgres-operator.crunchydata.com/role to role
          - source_labels: [ __meta_kubernetes_pod_label_postgres_operator_crunchydata_com_role ]
            target_label: role

      - job_name: 'crunchy-postgres-exporter-v4'
        kubernetes_sd_configs:
          - role: pod
            selectors:
              - role: pod
                label: crunchy-postgres-exporter=true

        relabel_configs:
          # Keep exporter port and drop all others
          - source_labels: [ __meta_kubernetes_pod_container_port_number ]
            action: keep
            regex: 9187
          # Set label for namespace
          - source_labels: [ __meta_kubernetes_namespace ]
            target_label: kubernetes_namespace
          # Set label for pod name
          - source_labels: [ __meta_kubernetes_pod_name ]
            target_label: pod
          # Convert namespace and cluster name to pg_cluster=namespace:cluster
          - source_labels: [ __meta_kubernetes_namespace,__meta_kubernetes_pod_label_pg_cluster ]
            target_label: pg_cluster
            separator: ":"
            replacement: '$1$2'
          # Convert kubernetes pod ip to ip
          - source_labels: [ __meta_kubernetes_pod_ip ]
            target_label: ip
          # Set deployment_name as deployment label
          - source_labels: [ __meta_kubernetes_pod_label_deployment_name ]
            target_label: deployment
          # Set label for role
          - source_labels: [ __meta_kubernetes_pod_label_role ]
            target_label: role
    rule_files:
      - /etc/prometheus/alert-rules.d/*.yml
    alerting:
      alertmanagers:
        - kubernetes_sd_configs:
            - role: pod
              selectors:
                - role: pod
                  label: app.kubernetes.io/component=crunchy-alertmanager
grafana:
  deploymentStrategy:
    type: Recreate
  persistence:
    enabled: true
    type: pvc
    storageClassName: "vultr-block-storage-hdd"
    accessModes:
      - ReadWriteOnce
    size: 40Gi
    finalizers:
      - kubernetes.io/pvc-protection
  grafana.ini:
    server:
      domain: ${host}
      protocol: http
      root_url: "%(protocol)s://%(domain)s/grafana/"
      serve_from_sub_path: true
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/use-regex: "true"
      cert-manager.io/cluster-issuer: letsencrypt-staging
    hosts:
      - ${host}
    path: /grafana(/|$)(.*)
    tls:
      - secretName: grafana-tls
        hosts:
          - ${host}
  additionalDataSources:
    - name: loki
      access: proxy
      type: loki
      url: http://loki-gateway.loki.svc.cluster.local
prometheusOperator:
  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      memory: 100Mi