## Override part of the installed name, will still keep release name.
##
# nameOverride: ""

## Override the full name of the installed chart.
##
# fullnameOverride: ""
image:
  repository: ghcr.io/ixoworld/synapse
  tag: v1.113.0-ixo.1
config:
  enableRegistration: true
  macaroonSecretKey: <path:${kv_mount}/data/${app_name}#MACAROON_SECRET_KEY>

# https://matrix-org.github.io/synapse/latest/usage/configuration/config_documentation.html
extraConfig:
  enable_authenticated_media: false
  media_retention:
    local_media_lifetime: null
    remote_media_lifetime: 14d
  rc_message:
    per_second: 3
    burst_count: 40
  rc_registration:
    per_second: 1
    burst_count: 4
  rc_registration_token_validity:
    per_second: 1
    burst_count: 8
  rc_login:
    address:
      per_second: 1
      burst_count: 10
    account:
      per_second: 1
      burst_count: 10
    failed_attempts:
      per_second: 1
      burst_count: 10
  rc_admin_redaction:
    per_second: 1
    burst_count: 50
  rc_joins:
    local:
      per_second: 2
      burst_count: 40
    remote:
      per_second: 0.5
      burst_count: 20
  rc_joins_per_room:
    per_second: 10
    burst_count: 50
  rc_invites:
    per_room:
      per_second: 5
      burst_count: 50
    per_user:
      per_second: 5
      burst_count: 50
    per_issuer:
      per_second: 5
      burst_count: 50
  rc_media_create:
    per_second: 10
    burst_count: 50
  rc_federation:
    window_size: 750
    sleep_limit: 15
    sleep_delay: 400
    reject_limit: 40
    concurrent: 5
  federation_rr_transactions_per_room_per_second: 40
  dynamic_thumbnails: true
  registration_requires_token: true
  app_service_config_files:
    - /data/appservice/rooms/production.yaml
  experimental_features:
    msc3202_device_masquerading: true
    msc3202_transaction_extensions: true
    msc2409_to_device_messages_enabled: true
## The Matrix domain name, this is what will be used for the domain part in
## your MXIDs.
##
serverName: '${host}'

## The public Matrix server name, this will be used for any public URLs
## in config as well as for client API links in the ingress.
publicServerName: 'matrix.${host}'

postgresql:
  enabled: false
#  auth:
#    password: synapse
#    username: synapse
#    database: synapse
#  primary:
#    persistence:
#      storageClass: "vultr-block-storage-hdd"
#      size: 40Gi

## An externally configured Postgres server to use for Synapse's database, note
## that the database needs to have both COLLATE and CTYPE set to "C".
##
externalPostgresql:
  host: ${pg_host}
  port: 5432
  username: ${pg_username}

## The name of an existing secret with postgresql credentials
  existingSecret: ${pg_cluster_name}-pguser-${pg_username}

## Password key to be retrieved from existing secret
  existingSecretPasswordKey: password

#  database: synapse
# sslmode: prefer

argoCD: true

## Extra arguments for the database connection
## ref: https://github.com/matrix-org/synapse/blob/develop/docs/postgres.md#synapse-config
##
#  extraArgs: {}


## Persistence configuration for the media repository function.
## This PVC will be mounted in either Synapse or a media_repo worker.
##
## NB; If you want to be able to scale this, you will have to set the
## accessMode to RWX/ReadWriteMany.
##
persistence:
  enabled: true
  # existingClaim: synapse-data
#  storageClass: "nfs"
  storageClass: "vultr-block-storage-hdd"
  accessMode: ReadWriteOnce
  size: 40Gi

## Configuration for the main Synapse service.
## To use TLS inside Synapse itself, add an TLS listener, and change the ports
## configured in here.
##
service:
  type: ClusterIP
  port: 8008
  targetPort: http

## The source of the signing key used by Synapse in federation.
##
signingkey:
  resources:
    limits:
      memory: 150Mi
    requests:
      cpu: 30m
      memory: 50Mi
  ## Enable a Kubernetes job to generate and store a signing key if one does not
  ## exist.
  ## If you have already run a Matrix server at some point on your domain then
  ## you will want to keep the old signing key, either by using the `existingSecret`
  ## configuration, or by including the old key under `extraConfig.old_signing_keys`
  ##
  ## If you lose your signing key then any federation traffic from your instance
  ## might not be trusted any more by the wider network.
  ##
  ## After the initial install, the job should be disabled to speed up subsequent upgrades.
  ##
  job:
    enabled: false

    ## Annotations to apply to the signing-key-job.
    ##
#    annotations:
#      argocd.argoproj.io/hook: PostSync
#      argocd.argoproj.io/hook-delete-policy: HookSucceeded

ingress:
  enabled: true

  ## Generate traefik-compatible regex paths instead of nginx-compatible ones.
  ##
  traefikPaths: false

  paths:
    - path: /health
      pathType: Prefix
      backend:
        service:
          name: matrix-synapse
          port:
            number: 8008

  ## Annotations to apply to the created ingress resource.
  ##
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization,Content-Type"
    nginx.ingress.kubernetes.io/cors-max-age: "3600"
    #  # Sync proxy-body-size with Synapse's max_upload_size which is 10M by default
    nginx.ingress.kubernetes.io/proxy-body-size: 10m
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-staging
  #  kubernetes.io/tls-acme: "true"

  ## Hosts to add to the ingress configuration for handling Client-to-Server
  ## API request paths.
  ##
  ## NB; config.serverName is included if includeServerName is set. (default)
  ##
  csHosts:
    - matrix.${host}
  hosts:
    - ${host}
  tls:
    - hosts:
        - ${host}
        - matrix.${host}
      secretName: matrix-tls
synapse:
  strategy:
    type: Recreate
  extraEnv:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: /secrets/gcp/key.json
  extraVolumes:
    - name: matrix-rooms
      configMap:
        name: ixo-matrix-appservice-rooms-registration
    - name: gcp-service-account-key
      secret:
        secretName: gcp-key-secret
  extraVolumeMounts:
    - name: matrix-rooms
      mountPath: /data/appservice/rooms
    - name: gcp-service-account-key
      mountPath: /secrets/gcp
  extraCommands: # This is for backing up.
    - 'apt-get update -yqq && apt-get install -yqq apt-transport-https ca-certificates gnupg curl zip'
    - 'curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg'
    - 'echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list'
    - 'apt-get update -yqq && apt-get install -yqq google-cloud-cli'
    - 'gcloud auth login --cred-file=$GOOGLE_APPLICATION_CREDENTIALS'
    - 'nohup sh -c "while true; do cd /synapse && zip -r data.zip data && gsutil cp data.zip ${gcs_bucket_url}/matrix/$(date +\%Y\%m\%d)/ && rm -f data.zip; sleep 86400; done" &' # Every 24 hours.
  resources:
    limits:
      memory: 4536Mi
    requests:
      cpu: 50m
      memory: 150Mi
workers:
  federation_sender:
    enabled: false
  federation_reader:
    enabled: false
  default:
    resources:
      limits:
        memory: 150Mi
      requests:
        cpu: 30m
        memory: 50Mi
serviceAccount:
  create: true