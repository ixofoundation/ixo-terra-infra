# Default values for matrix-livekit.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/element-hq/lk-jwt-service
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a service account's API token
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: livekit-jwt.example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: livekit-jwt-tls
  #    hosts:
  #      - livekit-jwt.example.com

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 10
  periodSeconds: 30

readinessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# LiveKit Configuration
livekit:
  # URL of the LiveKit SFU (required)
  url: ""
  
  # API Key and Secret (choose one method)
  # Method 1: Direct values
  key: ""
  secret: ""
  
  # Method 2: Read from files mounted as volumes
  keyFromFile: ""
  secretFromFile: ""
  
  # Method 3: Key file format (APIkey:secret)
  keyFile: ""
  
  # Port for the JWT service (defaults to 8080)
  port: "8080"
  
  # Skip TLS verification for Matrix homeserver (for testing only)
  insecureSkipVerifyTLS: false

# Secret configuration
# Use this to provide sensitive data like keys and secrets
secrets:
  # If true, creates a secret with the provided values
  create: false
  # Name of the secret (if not created, must exist)
  name: "livekit-secrets"
  # Secret data (only used if create: true)
  data:
    livekit-key: ""
    livekit-secret: ""
    # For key file format, use:
    # livekit-keyfile: "apikey:secret"

# ConfigMap for non-sensitive configuration
configMap:
  create: true
  name: ""
  data: {}

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  # maxUnavailable: 1

# Network Policy
networkPolicy:
  enabled: false
  ingress: []
  egress: [] 